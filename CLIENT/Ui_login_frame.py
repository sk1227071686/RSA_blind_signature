# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'c:\Users\36579\Desktop\毕业设计\login_frame.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1192, 913)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.frame_login = QtWidgets.QFrame(self.centralwidget)
        self.frame_login.setGeometry(QtCore.QRect(0, 0, 751, 531))
        self.frame_login.setStyleSheet("background-color: rgb(255, 170, 127);\n"
"border-color: rgb(170, 85, 0);")
        self.frame_login.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_login.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_login.setObjectName("frame_login")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.frame_login)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(330, 210, 231, 101))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.textEdit_userName = QtWidgets.QTextEdit(self.verticalLayoutWidget)
        self.textEdit_userName.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.textEdit_userName.setObjectName("textEdit_userName")
        self.verticalLayout.addWidget(self.textEdit_userName)
        self.plainTextEdit_passwd = QtWidgets.QPlainTextEdit(self.verticalLayoutWidget)
        self.plainTextEdit_passwd.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.plainTextEdit_passwd.setObjectName("plainTextEdit_passwd")
        self.verticalLayout.addWidget(self.plainTextEdit_passwd)
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.frame_login)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(200, 210, 101, 151))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_userName = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_userName.setStyleSheet("")
        self.label_userName.setObjectName("label_userName")
        self.verticalLayout_2.addWidget(self.label_userName)
        self.label_passwd = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_passwd.setObjectName("label_passwd")
        self.verticalLayout_2.addWidget(self.label_passwd)
        self.label_chapter = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_chapter.setObjectName("label_chapter")
        self.verticalLayout_2.addWidget(self.label_chapter)
        self.graphicsView_Chapter = QtWidgets.QGraphicsView(self.frame_login)
        self.graphicsView_Chapter.setGeometry(QtCore.QRect(460, 320, 101, 41))
        self.graphicsView_Chapter.setObjectName("graphicsView_Chapter")
        self.pushButton_login = QtWidgets.QPushButton(self.frame_login)
        self.pushButton_login.setGeometry(QtCore.QRect(380, 380, 121, 41))
        self.pushButton_login.setObjectName("pushButton_login")
        self.textEdit = QtWidgets.QTextEdit(self.frame_login)
        self.textEdit.setGeometry(QtCore.QRect(330, 320, 121, 41))
        self.textEdit.setObjectName("textEdit")
        self.frame_menu = QtWidgets.QFrame(self.centralwidget)
        self.frame_menu.setGeometry(QtCore.QRect(0, 0, 751, 531))
        self.frame_menu.setStyleSheet("background-color: rgb(170, 85, 0);")
        self.frame_menu.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_menu.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_menu.setObjectName("frame_menu")
        self.frame_menu.setVisible(False)
        self.label = QtWidgets.QLabel(self.frame_menu)
        self.label.setGeometry(QtCore.QRect(330, 60, 61, 41))
        self.label.setStyleSheet("font: 75 18pt \"Arial\";")
        self.label.setObjectName("label")
        self.pushButton_startVoting = QtWidgets.QPushButton(self.frame_menu)
        self.pushButton_startVoting.setGeometry(QtCore.QRect(270, 140, 191, 51))
        self.pushButton_startVoting.setObjectName("pushButton_startVoting")
        self.pushButton_createVoting = QtWidgets.QPushButton(self.frame_menu)
        self.pushButton_createVoting.setGeometry(QtCore.QRect(270, 220, 191, 51))
        self.pushButton_createVoting.setObjectName("pushButton_createVoting")
        self.pushButton_viewResults = QtWidgets.QPushButton(self.frame_menu)
        self.pushButton_viewResults.setGeometry(QtCore.QRect(270, 300, 191, 51))
        self.pushButton_viewResults.setObjectName("pushButton_viewResults")
        self.pushButton_exit = QtWidgets.QPushButton(self.frame_menu)
        self.pushButton_exit.setGeometry(QtCore.QRect(272, 377, 191, 51))
        self.pushButton_exit.setObjectName("pushButton_exit")
        self.frame_voting_list = QtWidgets.QFrame(self.centralwidget)
        self.frame_voting_list.setGeometry(QtCore.QRect(0, 0, 751, 531))
        self.frame_voting_list.setStyleSheet("background-color: rgb(255, 170, 0);")
        self.frame_voting_list.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_voting_list.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_voting_list.setObjectName("frame_voting_list")
        self.frame_voting_list.setVisible(False)
        self.label_2 = QtWidgets.QLabel(self.frame_voting_list)
        self.label_2.setGeometry(QtCore.QRect(20, 70, 691, 81))
        self.label_2.setStyleSheet("font: 75 9pt \"Arial\";\n"
"background-color: rgb(255, 255, 255);")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.frame_voting_list)
        self.label_3.setGeometry(QtCore.QRect(290, 20, 131, 31))
        self.label_3.setStyleSheet("font: 75 18pt \"Arial\";")
        self.label_3.setObjectName("label_3")
        self.radioButton = QtWidgets.QRadioButton(self.frame_voting_list)
        self.radioButton.setGeometry(QtCore.QRect(50, 210, 115, 19))
        self.radioButton.setObjectName("radioButton")
        self.frame_startVoting = QtWidgets.QFrame(self.centralwidget)
        self.frame_startVoting.setGeometry(QtCore.QRect(0, 0, 751, 531))
        self.frame_startVoting.setStyleSheet("background-color: rgb(255, 183, 155);")
        self.frame_startVoting.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_startVoting.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_startVoting.setObjectName("frame_startVoting")
        self.frame_startVoting.setVisible(False)
        self.label_inputVotingId = QtWidgets.QLabel(self.frame_startVoting)
        self.label_inputVotingId.setGeometry(QtCore.QRect(260, 100, 191, 71))
        self.label_inputVotingId.setStyleSheet("font: 75 18pt \"Arial\";")
        self.label_inputVotingId.setObjectName("label_inputVotingId")
        self.lineEdit = QtWidgets.QLineEdit(self.frame_startVoting)
        self.lineEdit.setGeometry(QtCore.QRect(220, 210, 271, 81))
        self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"font: 75 24pt \"Arial\";")
        self.lineEdit.setText("")
        self.lineEdit.setObjectName("lineEdit")
        self.pushButton_votingID = QtWidgets.QPushButton(self.frame_startVoting)
        self.pushButton_votingID.setGeometry(QtCore.QRect(290, 340, 141, 51))
        self.pushButton_votingID.setObjectName("pushButton_votingID")
        self.frame_voteSuccess = QtWidgets.QFrame(self.centralwidget)
        self.frame_voteSuccess.setGeometry(QtCore.QRect(0, 0, 751, 531))
        self.frame_voteSuccess.setStyleSheet("background-color: rgb(255, 206, 57);")
        self.frame_voteSuccess.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_voteSuccess.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_voteSuccess.setObjectName("frame_voteSuccess")
        self.frame_voteSuccess.setVisible(False)
        self.label_4 = QtWidgets.QLabel(self.frame_voteSuccess)
        self.label_4.setGeometry(QtCore.QRect(30, 180, 661, 101))
        self.label_4.setStyleSheet("font: 75 28pt \"Arial\";")
        self.label_4.setObjectName("label_4")
        self.frame_createVotingAddTitle = QtWidgets.QFrame(self.centralwidget)
        self.frame_createVotingAddTitle.setGeometry(QtCore.QRect(0, 0, 751, 531))
        self.frame_createVotingAddTitle.setStyleSheet("background-color: rgb(255, 239, 213);")
        self.frame_createVotingAddTitle.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_createVotingAddTitle.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_createVotingAddTitle.setObjectName("frame_createVotingAddTitle")
        self.frame_createVotingAddTitle.setVisible(False)
        self.label_5 = QtWidgets.QLabel(self.frame_createVotingAddTitle)
        self.label_5.setGeometry(QtCore.QRect(220, 70, 321, 81))
        self.label_5.setStyleSheet("font: 75 24pt \"Arial\";")
        self.label_5.setObjectName("label_5")
        self.textEdit_2 = QtWidgets.QTextEdit(self.frame_createVotingAddTitle)
        self.textEdit_2.setGeometry(QtCore.QRect(70, 210, 601, 81))
        self.textEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"font: 9pt \"Arial\";")
        self.textEdit_2.setObjectName("textEdit_2")
        self.pushButton_createVotingAddTitle = QtWidgets.QPushButton(self.frame_createVotingAddTitle)
        self.pushButton_createVotingAddTitle.setGeometry(QtCore.QRect(290, 340, 141, 51))
        self.pushButton_createVotingAddTitle.setObjectName("pushButton_createVotingAddTitle")
        self.frame_createVotingAddOptions = QtWidgets.QFrame(self.centralwidget)
        self.frame_createVotingAddOptions.setGeometry(QtCore.QRect(0, 0, 751, 531))
        self.frame_createVotingAddOptions.setStyleSheet("background-color: rgb(170, 255, 255);")
        self.frame_createVotingAddOptions.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_createVotingAddOptions.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_createVotingAddOptions.setObjectName("frame_createVotingAddOptions")
        self.frame_createVotingAddOptions.setVisible(False)
        self.listView_options = QtWidgets.QListView(self.frame_createVotingAddOptions)
        self.listView_options.setGeometry(QtCore.QRect(430, 30, 271, 461))
        self.listView_options.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.listView_options.setObjectName("listView_options")
        self.textEdit_3 = QtWidgets.QTextEdit(self.frame_createVotingAddOptions)
        self.textEdit_3.setGeometry(QtCore.QRect(40, 160, 331, 231))
        self.textEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.textEdit_3.setObjectName("textEdit_3")
        self.label_6 = QtWidgets.QLabel(self.frame_createVotingAddOptions)
        self.label_6.setGeometry(QtCore.QRect(50, 60, 341, 71))
        self.label_6.setStyleSheet("font: 75 20pt \"Arial\";")
        self.label_6.setObjectName("label_6")
        self.pushButton_addOption = QtWidgets.QPushButton(self.frame_createVotingAddOptions)
        self.pushButton_addOption.setGeometry(QtCore.QRect(130, 420, 151, 51))
        self.pushButton_addOption.setObjectName("pushButton_addOption")
        self.frame_createVotingSuccess = QtWidgets.QFrame(self.centralwidget)
        self.frame_createVotingSuccess.setGeometry(QtCore.QRect(0, 0, 751, 531))
        self.frame_createVotingSuccess.setStyleSheet("background-color: rgb(255, 74, 213);")
        self.frame_createVotingSuccess.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_createVotingSuccess.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_createVotingSuccess.setObjectName("frame_createVotingSuccess")
        self.frame_createVotingSuccess.setVisible(False)
        self.label_7 = QtWidgets.QLabel(self.frame_createVotingSuccess)
        self.label_7.setGeometry(QtCore.QRect(210, 80, 301, 101))
        self.label_7.setStyleSheet("font: 28pt \"Arial\";")
        self.label_7.setObjectName("label_7")
        self.label_createVotingSuccess = QtWidgets.QLabel(self.frame_createVotingSuccess)
        self.label_createVotingSuccess.setGeometry(QtCore.QRect(100, 210, 571, 131))
        self.label_createVotingSuccess.setStyleSheet("font: 75 16pt \"Arial\";")
        self.label_createVotingSuccess.setObjectName("label_createVotingSuccess")
        self.frame_viewListInputId = QtWidgets.QFrame(self.centralwidget)
        self.frame_viewListInputId.setGeometry(QtCore.QRect(0, 0, 751, 531))
        self.frame_viewListInputId.setStyleSheet("background-color: rgb(21, 173, 255);")
        self.frame_viewListInputId.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_viewListInputId.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_viewListInputId.setObjectName("frame_viewListInputId")
        self.frame_viewListInputId.setVisible(False)
        self.label_8 = QtWidgets.QLabel(self.frame_viewListInputId)
        self.label_8.setGeometry(QtCore.QRect(200, 100, 371, 71))
        self.label_8.setStyleSheet("font: 75 28pt \"Arial\";")
        self.label_8.setObjectName("label_8")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.frame_viewListInputId)
        self.lineEdit_2.setGeometry(QtCore.QRect(140, 230, 461, 61))
        self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"font: 75 9pt \"Arial\";\n"
"font: 75 14pt \"Arial\";")
        self.lineEdit_2.setText("")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.pushButton_ViewVotingInputId = QtWidgets.QPushButton(self.frame_viewListInputId)
        self.pushButton_ViewVotingInputId.setGeometry(QtCore.QRect(290, 350, 161, 51))
        self.pushButton_ViewVotingInputId.setObjectName("pushButton_ViewVotingInputId")
        self.frame_5 = QtWidgets.QFrame(self.centralwidget)
        self.frame_5.setGeometry(QtCore.QRect(0, 0, 751, 531))
        self.frame_5.setStyleSheet("background-color: rgb(225, 74, 255);")
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.frame_5.setVisible(False)
        self.label_9 = QtWidgets.QLabel(self.frame_5)
        self.label_9.setGeometry(QtCore.QRect(270, 10, 181, 51))
        self.label_9.setStyleSheet("font: 75 24pt \"Arial\";")
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(self.frame_5)
        self.label_10.setGeometry(QtCore.QRect(20, 80, 41, 21))
        self.label_10.setStyleSheet("font: 75 10pt \"Arial\";")
        self.label_10.setObjectName("label_10")
        self.label_resultStartTime = QtWidgets.QLabel(self.frame_5)
        self.label_resultStartTime.setGeometry(QtCore.QRect(70, 70, 181, 41))
        self.label_resultStartTime.setStyleSheet("font: 75 10pt \"Arial\";")
        self.label_resultStartTime.setObjectName("label_resultStartTime")
        self.label_11 = QtWidgets.QLabel(self.frame_5)
        self.label_11.setGeometry(QtCore.QRect(520, 80, 41, 21))
        self.label_11.setStyleSheet("font: 75 10pt \"Arial\";")
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(self.frame_5)
        self.label_12.setGeometry(QtCore.QRect(570, 80, 171, 21))
        self.label_12.setStyleSheet("font: 75 10pt \"Arial\";")
        self.label_12.setObjectName("label_12")
        self.label_13 = QtWidgets.QLabel(self.frame_5)
        self.label_13.setGeometry(QtCore.QRect(30, 120, 691, 21))
        self.label_13.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_13.setObjectName("label_13")
        self.line = QtWidgets.QFrame(self.frame_5)
        self.line.setGeometry(QtCore.QRect(30, 140, 701, 20))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.toolButton_user = QtWidgets.QToolButton(self.frame_5)
        self.toolButton_user.setGeometry(QtCore.QRect(710, 0, 41, 31))
        self.toolButton_user.setObjectName("toolButton_user")
        self.label_14 = QtWidgets.QLabel(self.frame_5)
        self.label_14.setGeometry(QtCore.QRect(560, 0, 41, 31))
        self.label_14.setObjectName("label_14")
        self.label_user = QtWidgets.QLabel(self.frame_5)
        self.label_user.setGeometry(QtCore.QRect(600, 5, 101, 21))
        self.label_user.setObjectName("label_user")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.pushButton_login.clicked.connect(self.login)

    def login(self):
        global e,n
        self.s = socket.socket()
        self.s.connect(('127.0.0.1',5566))
        self.s.setblocking(1)
        print(self.s.recv(1024).decode())
        self.s.send(b'recv')
        #密钥交换
        print('交换主密钥...')
        key = gen_aes_key()
        self.key = key
        print(key)
        self.s.send(rsa_en_bytes(key,(e,n)))
        rc = self.s.recv(4)
        envelop(self.s,key,'login...'.encode())
        #发送用户名，密码
        username = self.textEdit_userName.toPlainText()
        passwd = self.plainTextEdit_passwd.toPlainText()
        envelop(self.s,key,username.encode())
        #获取salt值进行哈希
        salt = de_envelop(self.s,key)
        passwd =  SHA256.new(SHA256.new(passwd.encode()).digest()+salt).digest()
        envelop(self.s,key,passwd)
        identify_msg = de_envelop(self.s,key).decode()
        print(identify_msg)
        #确认服务器已准备
        self.s.recv(4)
        if identify_msg == '正在登录...':
            login_msg = de_envelop(self.s,key).decode()
            print(login_msg)
            if login_msg == '登录成功...':
                self.userName = username
                self.has_login = True
                self.label_user.setText(self.userName)
                self.menu()

    
    def menu(self):
        print('menu!')
        self.frame_login.setVisible(False)
        self.frame_menu.setVisible(True)
    def start_voting(self):
        envelop(self.s,self.key,'start voting...'.encode())
        #///////////////msg换成签名内容//////////////////////
        # msg = '我选李华！,000001'.encode()
        # #///////////////////////////////////////////////////
        # h_msg = SHA256.new(msg).digest()
        r = random.randint(1,n)
        self.frame_menu.setVisible(False)
        self.frame_startVoting.setVisible(True)
        id_ = self.lineEdit.text() #输入投票ID
        envelop(s,key,id_.encode())
        #查看状态
        status = de_envelop(s,key)
        if status == 'plese sending the message...'.encode():
            title,options_ = loads(de_envelop(s,key)) 
            options_ = eval(options_)
            #获得当前投票场次信息(标题,选项)
            print('投票标题：',title)
            for i in range(len(options_)):
                print('--',i+1,',',options_[i])
            result_vote = None
            flag = True
            while flag:
                inp = input('输入投票序号：')
                if not int(inp)-1 in range(len(options_)):
                    print('请输入正确的投票序号！')
                else:
                    result_vote = inp
                    break
            #把result 加上uuid进行哈希H(UUID,id_,result)
            UUID = str(uuid4())
            h_msg = SHA256.new(dumps((UUID,id_,result_vote))).digest()
            # envelop(s,key,result.encode())  
            #发送盲化消息
            envelop(s,key,int_to_bytes((rsa_enc(r,e,n)*bytes_to_int(h_msg))%n))
            #获得盲化后的签名
            print('收到来自认证服务器的签名...')
            rcv = de_envelop(s,key)
            sign_voting_id = de_envelop(s,key)
            print('完整性校验成功！')
            r1 = inv(r,n)
            rcv = bytes_to_int(rcv)
            s.close()
            #给服务器2发送结果
            result = (r1*rcv%n)
            with open(os.getcwd()+'\keys\Server2_rsa_pub.pem','rb') as f:
                e,n=f.read().split(b'**^.^**')
            e,n = map(bytes_to_int,(e,n))
            key = gen_aes_key()
            s1 = socket.socket()
            s1.connect(('127.0.0.1',5567))
            print(s1.recv(1024).decode())
            s1.send(b'recv')
            #密钥交换
            print('交换主密钥...')
            key = gen_aes_key()
            s1.send(rsa_en_bytes(key,(e,n)))
            s1.recv(4)
            #发送结果和签名
            envelop(s1,key,sign_voting_id)##############4/19#######################
            msg = dumps((UUID,id_,result_vote))
            envelop(s1,key,msg)
            envelop(s1,key,int_to_bytes(result))
            status1 = de_envelop(s1,key)
            print(status1.decode())
            s1.close()
        else:
            print(status.decode())


    #//////////////////////////////
    def create_voting():
        s = socket.socket()
        s.connect(('127.0.0.1',5566))
        s.setblocking(1)
        print(s.recv(1024).decode())
        s.send(b'recv')
        #密钥交换
        print('交换主密钥...')
        key = gen_aes_key()
        print(key)
        s.send(rsa_en_bytes(key,(e,n)))
        rc = s.recv(4)
        envelop(s,key,'create a voting...'.encode())
        #发送用户名，密码
        username = input('请输入用户名：')
        passwd = input('请输入密码：')
        envelop(s,key,username.encode())
        #获取salt值进行哈希
        salt = de_envelop(s,key)
        passwd =  SHA256.new(SHA256.new(passwd.encode()).digest()+salt).digest()
        envelop(s,key,passwd)
        s.recv(4)
        status = de_envelop(s,key)
        print(status.decode())
        if status == '登录成功!'.encode():
            #输入投票标题和选项
            title = input('请输入投票标题：\n')
            flag = 'y'
            voting_list = [];count=0
            while flag not in ('n','N'):
                flag = input('请输入第{}个选项(输入"n"来结束输入)：').format(count+1)
                voting_list.append(flag)
                count+=1
            voting_list.pop(-1)
            end_date = input('请输入投票的截止日期(年-月-日 时:分:秒)：\n')
            #发送pickle转的二进制 (title,options)
            envelop(s,key,dumps((title,voting_list,end_date)))
            #创建信息：
            print(de_envelop(s,key).decode())
        s.close()
    # elif operate == '3':
    #     envelop(s,key,'register a user...'.encode())
        

    # else:
    #     print('未找到相应菜单，请输入正确的菜单序号...')
        # operate = input('请输入菜单序号：')###########################################################################
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_userName.setText(_translate("MainWindow", "用户名:"))
        self.label_passwd.setText(_translate("MainWindow", "密码:"))
        self.label_chapter.setText(_translate("MainWindow", "验证码:"))
        self.pushButton_login.setText(_translate("MainWindow", "登录"))
        self.label.setText(_translate("MainWindow", "菜单"))
        self.pushButton_startVoting.setText(_translate("MainWindow", "投票"))
        self.pushButton_createVoting.setText(_translate("MainWindow", "发起投票"))
        self.pushButton_viewResults.setText(_translate("MainWindow", "查看结果"))
        self.pushButton_exit.setText(_translate("MainWindow", "退出"))
        self.label_2.setText(_translate("MainWindow", "标题"))
        self.label_3.setText(_translate("MainWindow", "投票标题"))
        self.radioButton.setText(_translate("MainWindow", "RadioButton"))
        self.label_inputVotingId.setText(_translate("MainWindow", "请输入投票ID"))
        self.pushButton_votingID.setText(_translate("MainWindow", "查询"))
        self.label_4.setText(_translate("MainWindow", "                 正在投票..."))
        self.label_5.setText(_translate("MainWindow", "请输入投票标题："))
        self.pushButton_createVotingAddTitle.setText(_translate("MainWindow", "继续"))
        self.label_6.setText(_translate("MainWindow", "请输入待添加的选项："))
        self.pushButton_addOption.setText(_translate("MainWindow", "添加"))
        self.label_7.setText(_translate("MainWindow", "您已发起投票!"))
        self.label_createVotingSuccess.setText(_translate("MainWindow", "您的投票场次是：122，请牢记以便以后查询..."))
        self.label_8.setText(_translate("MainWindow", "请输入投票场次："))
        self.pushButton_ViewVotingInputId.setText(_translate("MainWindow", "继续"))
        self.label_9.setText(_translate("MainWindow", "投票结果："))
        self.label_10.setText(_translate("MainWindow", "开始"))
        self.label_resultStartTime.setText(_translate("MainWindow", "2021-04-23 18:00:00"))
        self.label_11.setText(_translate("MainWindow", "结束"))
        self.label_12.setText(_translate("MainWindow", "2021-04-27 21:00:00"))
        self.label_13.setText(_translate("MainWindow", "TextLabel"))
        self.toolButton_user.setText(_translate("MainWindow", "菜单"))
        self.label_14.setText(_translate("MainWindow", "您好："))
        self.label_user.setText(_translate("MainWindow", "用户sk"))
import aaa_rc
